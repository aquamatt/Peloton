<!--
# $Id: peloton.xml 31 2008-02-26 10:23:10Z as $
#
# Copyright (c) 2007-2008 ReThought Limited and Peloton Contributors
# All Rights Reserved
# See LICENSE for details
-->
<sect1>
	<title>Configuration</title>
	<warning>
		<para>
			THE CONFIGURATION SYSTEM IS UNDERGOING A COMPLETE OVERHAUL
			AS IT IS SEEN AS OVERLY COMPLEX BOTH IN USE AND IN IMPLEMENTATION.
		</para>
	</warning>
	<para>
		There are three groups of configuration files in the &peloton; system:
	</para>
	<itemizedlist>
		<listitem>
			<para>
				Configuration of the "grid", the collection of &peloton;
				domains that may span many networks.
			</para>
		</listitem>
		<listitem>
			<para>
				Configuration of the "domain", a group of nodes collectively
				forming a closely connected mesh on a single network.
			</para>
		</listitem>
		<listitem>
			<para>
				Configuration of individual services.
			</para>
		</listitem>
	</itemizedlist>
	<para>
		Each configuration group consists of a collection of configurations,
		generally a common configuration and then a number of overiding or additional
		configuration files that are invoked based on runtime settings such as 
		the grid's 'gridmode' (which is a value such as 'test', 'UAT', 'prod', etc.).
	</para>
	<para>
		Services may be started with an additional run-time configuration file
		that changes the way it works. For example, a service providing web output
		may have a runtime configuration that re-assigns the location of the 'resource'
		folder. Thus more than one instance of the same service could be run with
		different run-time names pointing to different resource folders to support
		different websites, for example.
	</para>
	<para>
		Due to the confusion that could arise with so many configuration files
		required to get a grid, domain and service running, the layout of configuration
		folders and the names of files within is strictly regulated as follows:
	</para>
	<informalfigure>
		<programlisting>    
$ROOT/grid.pcfg
     /domain.pcfg    &lt;----- COMMON DOMAIN CONFIG
     /psc.pcfg       &lt;----- COMMON PSC CONFIG
     /domain/&lt;name>/common.pcfg
                    &lt;gridmode>.pcfg
                    ...
     /domain/&lt;name>/psc/common.pcfg
                        &lt;gridmode&gt;.pcfg
                        ...
		</programlisting>
	</informalfigure>
	<sect2>
		<title>Accessing configuration</title>
		<note>
			<para>
				The contents of this section will most likely remain valid through
				the change in configuration system planned subsequent to the initial
				public release.
			</para>
		</note>
		<para>
			The service's configuration or <firstterm>profile</firstterm> is made available
			to the service in the <code>profile</code> attribute (<code>self.profile</code>).
			Thus if in configuration you set a <code>DATABASE_NAME</code> you will find it
			in <code>self.profile.DATABASE_NAME</code>.
		</para>
		<title>
			Often you will want a service to perform some high-level initialisation
			upon startup. This is placed in methods
			<code>start()</code> and <code>stop()</code>. For example, in <code>start()</code>
			you could create a database pool, and in <code>stop()</code> you could clean up and
			close it.
		</title>
	</sect2>
			
</sect1>